/**************************************************************/
/*                HOST PACKAGE INSTALLATON                    */
/**************************************************************/

sudo apt-get update

sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential lzop u-boot-tools chrpath socat cpio python python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm lib32z1 zlib1g net-tools bison flex libssl-dev libncurses5-dev libncursesw5-dev minicom


/**************************************************************/
/*                LINUX COMPILATION STEPS                     */
/**************************************************************/

STEP 1:
/*
 *removes all the temporary folder, object files, images generated 
 *during the previous build. 
 *This step also deletes the .config file if created previously 
 */
make ARCH=arm distclean


STEP 2:
/*creates a .config file by using default config file given by the vendor
 *(here example for BeagelBone Black)*/

make ARCH=arm bb.org_defconfig


STEP 3:
/*This step is optional. Run this command only if you want to change 
 *some kernel settings before compilation */ ​

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig


STEP 4:
/*Kernel source code compilation. This stage creates a kernel image "uImage" 
 *also all the device tree source files will be compiled, and dtbs will be generated */ ​

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage dtbs LOADADDR=0x80008000 -j4


STEP 5:
/*This step builds and generates in-tree loadable(M) kernel modules(.ko) */

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  modules  -j4


STEP 6:
/* This step installs all the generated .ko files in the default path of the computer
 * (/lib/modules/<kernel_ver>) */​

sudo make ARCH=arm  modules_install